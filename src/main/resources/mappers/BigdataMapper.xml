<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.maidaotech.java07.work.chapter05.question10.dao.BigdataMapper">
  <resultMap id="BaseResultMap" type="cn.maidaotech.java07.work.chapter05.question10.pojo.Bigdata">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="BIGINT" property="createdAt" />
    <result column="updated_at" jdbcType="BIGINT" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, username, amount, status, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from big_data
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from big_data
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.maidaotech.java07.work.chapter05.question10.pojo.Bigdata">
    insert into big_data (id, user_id, username, 
      amount, status, created_at, 
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=BIGINT}, 
      #{updatedAt,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.maidaotech.java07.work.chapter05.question10.pojo.Bigdata">
    insert into big_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.maidaotech.java07.work.chapter05.question10.pojo.Bigdata">
    update big_data
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.maidaotech.java07.work.chapter05.question10.pojo.Bigdata">
    update big_data
    set user_id = #{userId,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=BIGINT},
      updated_at = #{updatedAt,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>